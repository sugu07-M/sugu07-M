 public doughnutChartLabels: string[] = ['Draft', 'Pending Approval', 'Approved', 'Rejected', 'Implementation', 'Pending', 'Release', 'Closure'];
public doughnutChartData: ChartData<any, any[], string> = {
   labels: this.doughnutChartLabels,
   datasets: [
     {
       data: [10,
         9,
         3,
         5,
         7,
         8,
        6,
        9],
       label: 'Status',
       backgroundColor: [
         '#3B71CA', '#808080ff', '#14A44D', '#DC4C64', '#54B4D3', '#E4A11B', '#b5eb49', '#808080ff'
       ],
     }
   ]

 public doughnutChartType: ChartType = 'doughnut';


 countStatus() {
   this.newCount = this.changerequest.filter(item => item.status.trim() === 'Draft').length;
   this.completedCount = this.changerequest.filter(item => item.status.trim() === 'Completed').length;
   this.pendingCount = this.changerequest.filter(item => item.status.trim() !== 'Completed' && item.status.trim() !== 'Draft').length;
   this.pendingApproval = this.changerequest.filter(item => item.status.trim() === 'Pending Approval').length;
   this.Approved = this.changerequest.filter(item => item.status.trim() === 'Approved').length;
   this.Rejected = this.changerequest.filter(item => item.status.trim() === 'Rejected').length;
   this.Implemention = this.changerequest.filter(item => item.status.trim() === 'Implement').length;
   this.pending = this.changerequest.filter(item => item.status.trim() === 'Pending').length;
   this.release = this.changerequest.filter(item => item.status.trim() === 'Release').length;
