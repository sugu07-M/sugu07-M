ngOnInit(): void {
    // Make API calls to retrieve data from both tables
    this.http.get<any[]>('api/first-table-data').subscribe(firstTableData => {
      this.http.get<any[]>('api/second-table-data').subscribe(secondTableData => {
        // Join the data based on the common identifier
        this.tableData = this.joinData(firstTableData, secondTableData);
      });
    });
  }

  joinData(firstTableData: any[], secondTableData: any[]): any[] {
    return firstTableData.map(item1 => {
      const correspondingItem = secondTableData.find(item2 => item2.plantId === item1.plantId);
      // Return a combined object
      return {
        plantId: item1.plantId,
        plantCode: item1.plantCode,
        propertyName1: correspondingItem ? correspondingItem.propertyName1 : null,
        propertyName2: correspondingItem ? correspondingItem.propertyName2 : null,
        // Add more properties as needed
      };
    });
  }
