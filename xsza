
import { ChartType, Plugin } from 'chart.js';
import { Label } from 'ng2-charts';
import * as pluginDataLabels from 'chartjs-plugin-datalabels';

barChartPlugins: Plugin[] = [pluginDataLabels]; // Adjusted type declaration

  constructor(private http: HttpClient) {}

  getBarchart() {
    const apiUrls = this.apiurl + '/Barchart/Getbarchart';

    const httpOptions = {
      headers: new HttpHeaders({
        'content-Type': 'application/json'
      })
    };

    this.http.get(apiUrls).subscribe(
      (response: any) => {
        this.chartdata = response;

        // Extracting data
        this.completed = response.map((item: { completedIdnum: any; }) => item.completedIdnum);
        this.noncompleted = response.map((item: { nonCompletedIdnum: any; }) => item.nonCompletedIdnum);
        const month = response.map((item: { crmonth: any }) => item.crmonth);

        // Update chart data and labels
        this.updateBarChartLabels(month);
        this.updateBarChartData();

      },
      (error) => {
        console.log("Post failed", error);
      }
    );
  }

  updateBarChartData() {
    this.barChartData = [
      { data: this.noncompleted, label: 'Open' },
      { data: this.completed, label: 'Completed' }
    ];
  }

  updateBarChartLabels(month: number[]) {
    this.barChartLabels = month.map(month => this.getMonthName(month));
  }

  getMonthName(month: number): string {
    const monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
    return monthNames[month - 1];
  }

  public barChartType: ChartType = 'bar';

  public barChartLegend = true;

  // events
  public chartClicked(e: any): void {
    // console.log(e);
  }
