 Getbarchart() {
   const apiUrls = this.apiurl + '/Barchart/Getbarchart';
   

   const httpOptions = {
     headers: new HttpHeaders({
       'content-Type': 'application/json'
     })
   };

   this.http.get(apiUrls).subscribe(
     (response: any) => {
       this.chartdata = response;
      
       const completedValues = response.map((item: { completedIdnum: any; }) => item.completedIdnum);
       const noncompletedValues = response.map((item: { nonCompletedIdnum: any; }) => item.nonCompletedIdnum);
       
       
     }, 
     (error) => {
       console.error("Post failed", error);
     }
   );
 }


 public barChartOptions: any = {
   scaleShowVerticalLines: false,
   responsive: true
 };
 public barChartLabels: string[] = this.generateChartLabels();
 public barChartType: Chart.ChartType = 'bar';
 public barChartLegend = true;
 public barChartPlugins = [];
 public barChartData: any[] = [
   { data:noncompletedValues, label: 'Open' },
   { data: noncompletedValues, label: 'Completed' }
 ]

 
