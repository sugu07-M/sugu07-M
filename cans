   <div style="width: auto; margin-top: -5%; margin-left: -15%">
     <ng-multiselect-dropdown [(ngModel)]="selectedItems"
                              [settings]="dropdownSettings"
                              [data]="dropdownList"
                              (onSelect)="onItemSelect($event)"
                              (onSelectAll)="onSelectAll($event)"
                              (onDeSelect)="onItemDeSelect($event)"
                              (onDeSelectAll)="onUnSelectAll()">
     </ng-multiselect-dropdown>

 this.dropdownList = [
   { item_id: 'N', item_text: 'Change Request' },
   { item_id: 'C', item_text: 'Closure' },
   { item_id: 'R', item_text: 'Release' }
  
 ];
 this.dropdownSettings = {
   idField: 'item_id',
   textField: 'item_text',
 };

selectedItems: string[] = []; // Array to store selected item_ids
    selectedN: boolean = false; // To store if 'N' is selected
    selectedC: boolean = false; // To store if 'C' is selected
    selectedR: boolean = false; // To store if 'R' is selected

    constructor() {}

    onItemSelect(item: any) {
        if (item.item_id === 'N') {
            this.selectedN = true;
        } else if (item.item_id === 'C') {
            this.selectedC = true;
        } else if (item.item_id === 'R') {
            this.selectedR = true;
        }
        this.selectedItems.push(item.item_id);
        console.log('Selected Items:', this.selectedItems);
    }

    onSelectAll(items: any) {
        this.selectedItems = items.map((item: any) => item.item_id);
        this.selectedN = true;
        this.selectedC = true;
        this.selectedR = true;
        console.log('Selected All:', this.selectedItems);
    }

    onItemDeSelect(item: any) {
        if (item.item_id === 'N') {
            this.selectedN = false;
        } else if (item.item_id === 'C') {
            this.selectedC = false;
        } else if (item.item_id === 'R') {
            this.selectedR = false;
        }
        this.selectedItems = this.selectedItems.filter((id: string) => id !== item.item_id);
        console.log('Deselected Item:', item);
    }

    onUnSelectAll() {
        this.selectedN = false;
        this.selectedC = false;
        this.selectedR = false;
        this.selectedItems = [];
        console.log('Deselected All');
    }
 "type": "https://tools.ietf.org/html/rfc9110#section-15.5.1",
    "title": "One or more validation errors occurred.",
    "status": 400,
    "errors": {
        "obj": [
            "The obj field is required."
        ],
        "$.approverstage": [
            "The JSON value could not be converted to System.String. Path: $.approverstage | LineNumber: 0 | BytePositionInLine: 390."
        ]
    },
    "traceId": "00-c1d0d66dc47da33001ab42d774d64b1d-19535a7a0fb4e0d0-00"
