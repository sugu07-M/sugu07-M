

 chartData: any;
 completed: any[]=[];
 noncompleted: any[]=[];
 month: any[] = [];
 barChartData: any[] = [];
 barChartLabels: string[] = [];
 isDrillDown: boolean = false;
 barChartLegend = true;
 

 getBarchart() {
   const apiUrls = this.apiurl + '/Barchart/Getbarchart';

   const httpOptions = {
     headers: new HttpHeaders({
       'content-Type': 'application/json'
     })
   };

   this.http.get(apiUrls).subscribe(
     (response: any) => {
       this.chartData = response;
       this.completed = response.map((item: { completedIdnum: any; }) => item.completedIdnum);
       this.noncompleted = response.map((item: { nonCompletedIdnum: any; }) => item.nonCompletedIdnum);
       this.month = response.map((item: { crmonth: any }) => this.getMonthName(item.crmonth));

       this.updateBarChartLabels();
       this.updateBarChartData();

     },
     (error) => {
       console.log("Post failed", error);
     }
   );
 }

 updateBarChartData() {
   this.barChartData = [
     { data: this.noncompleted, label: 'Open' },
    { data: this.completed, label: 'Completed' }
   ];  }

 updateBarChartLabels() {
   this.barChartLabels = this.month;
 }

 getMonthName(month: number): string {
   const monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
   return monthNames[month - 1];
 }

 handleDrillDownClick(event: any): void {
   if (event && event.active && event.active.length > 0) {
     const clickedSegmentLabel = this.barChartLabels[event.active[0]._index];
     const clickedSegmentData = this.barChartData.map(data => data.data[event.active[0]._index]);
     console.log('aasassasas:', clickedSegmentData)
     // Navigate to the filterdashboard component and pass clicked segment data
     this.router.navigate(['/filterdashboard'], {
       state: {
         label: clickedSegmentLabel,
         completed: clickedSegmentData[0],
         open: clickedSegmentData[1]
       }
     });
   }
 }



 public barChartOptions: any = {
   responsive: true,
   onClick: this.handleDrillDownClick.bind(this) 
 };
