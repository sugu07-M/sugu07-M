
public chartOptions: Partial<ChartOptions> = {};
Gettablechart() {
  const apiUrls = this.apiurl + '/ViewChangeRequest/ViewChangerequest';
  const httpOptions = {
    headers: new HttpHeaders({
      'Content-Type': 'application/json'
    })
  };

  const stagesToCount = ['Approval', 'Closure', 'Implementation', 'Initiated', 'Release'];

  this.http.get(apiUrls, httpOptions).subscribe(
    (response: any) => {
      console.log('API response:', response); // Log the API response
      
      const chartData: any[] = response;

      const multi: any[] = [];

      const uniquePlants = [...new Set(chartData.map(item => item.plantId))];

      uniquePlants.forEach(plantId => {
        const plantData = chartData.filter(item => item.plantId === plantId);

        const stagesCount: { [key: string]: number } = {};
        stagesToCount.forEach(stage => {
          stagesCount[stage] = plantData.filter(item => item.stage.trim() === stage).length;
        });

        const seriesData = stagesToCount.map(stage => stagesCount[stage]);
        multi.push({
          name: plantId,
          data: seriesData
        });
      });

      console.log('Chart data:', multi); // Log the chart data

      this.chartOptions = {
        series: multi,
        chart: {
          type: 'bar',
          height: 350,
          stacked: true
        },
        plotOptions: {
          bar: {
            horizontal: true
          }
        },
        xaxis: {
          categories: stagesToCount,
          labels: {
            formatter: val => val + 'K'
          }
        },
        title: {
          text: 'Fiction Books Sales'
        },
        yaxis: {
          title: {
            text: undefined
          }
        },
        tooltip: {
          y: {
            formatter: val => val + 'K'
          }
        },
        fill: {
          opacity: 1
        },
        legend: {
          position: 'top',
          horizontalAlign: 'left',
          offsetX: 40
        }
      };

      console.log('Chart options:', this.chartOptions); // Log the chart options
    },
    error => {
      console.log("API request failed", error);
    }
  );

interface ChartOptions {
  series: ApexAxisChartSeries[];
  chart: ApexChart;
  xaxis: ApexXAxis;
  plotOptions: ApexPlotOptions;
  title: ApexTitleSubtitle;
  yaxis: ApexYAxis;
  tooltip: ApexTooltip;
  fill: ApexFill;
  legend: ApexLegend;
}
