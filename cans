 onChartClicked(event: MouseEvent): void {
    const chartElement = event.target as HTMLCanvasElement;
    const chart = Chart.getChart(chartElement); // Get the chart instance
    const activePoints = chart?.getElementsAtEventForMode('point', event, { intersect: true, axis: 'x' });

    if (activePoints && activePoints.length > 0) {
      const clickedIndex = activePoints[0]?.index;
      if (clickedIndex !== undefined) {
        const clickedLabel = this.doughnutChartLabels[clickedIndex];
        switch (clickedLabel) {
          case 'Draft':
            this.router.navigate(['/draft-page']);
            break;
          case 'Pending Approval':
            this.router.navigate(['/pending-approval-page']);
            break;
          case 'Approved':
            this.router.navigate(['/approved-page']);
            break;
          // Add cases for other labels
          default:
            // Handle default case
            break;
        }
      }
    }
  }
