getBarchart() {
  const apiUrls = this.apiurl + '/Barchart/Getbarchart';

  const httpOptions = {
    headers: new HttpHeaders({
      'content-Type': 'application/json'
    })
  };

  this.http.get(apiUrls).subscribe(
    (response: any[]) => {
      this.chartdata = response;

      // Initialize arrays to store data for each month
      const monthlyData = Array(12).fill({ completed: 0, nonCompleted: 0 });

      // Extracting data for each month
      response.forEach((item: { crmonth: number, completedIdnum: number, nonCompletedIdnum: number }) => {
        const monthIndex = item.crmonth - 1; // Months are 1-based, array index is 0-based
        monthlyData[monthIndex].completed += item.completedIdnum;
        monthlyData[monthIndex].nonCompleted += item.nonCompletedIdnum;
      });

      // Update chart data and labels
      this.updateBarChartLabels();
      this.updateBarChartData(monthlyData);
    },
    (error: any) => {
      console.log("Post failed", error);
    }
  );
}

updateBarChartData(monthlyData: { completed: number, nonCompleted: number }[]) {
  this.barChartData = [
    { data: monthlyData.map(data => data.nonCompleted), label: 'Open' },
    { data: monthlyData.map(data => data.completed), label: 'Completed' }
  ];
}

updateBarChartLabels() {
  const monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
  this.barChartLabels = monthNames;
}


chartdata: any;
  completed: any[] = [];
  noncompleted: any[] = [];
  month: any[] = [];
  barChartData: any[] = [];
  barChartLabels: string[] = [];
  noncompletedlength: number = 0;
  barChartLegend = true;
  noncompletedtotal: number = 0;
  completedtotal: number = 0;

  getBarchart() {
    const apiUrls = this.apiurl + '/Barchart/Getbarchart';

    const httpOptions = {
      headers: new HttpHeaders({
        'content-Type': 'application/json'
      })
    };

    this.http.get(apiUrls).subscribe(
      (response: any) => {
        this.chartdata = response;

        // Extracting data
        this.completed = response.map((item: { completedIdnum: any; }) => item.completedIdnum);
        this.noncompleted = response.map((item: { nonCompletedIdnum: any; }) => item.nonCompletedIdnum);

        const month = response.map((item: { crmonth: any }) => Number(item.crmonth));

        const uniquemonth:number[] = [...new Set(month)];
    
       
        this.noncompletedtotal = this.noncompleted.reduce((total: number, num: number) => total + num, 0);
        this.completedtotal = this.completed.reduce((total: number, num: number) => total + num, 0);
        console.log('total:', this.noncompletedtotal)

        // Update chart data and labels
        this.updateBarChartLabels(uniquemonth);
        this.updateBarChartData();

      },
      (error: any) => {
        console.log("Post failed", error);
      }
    );
  }

  updateBarChartData() {
    this.barChartData = [
      { data: [this.noncompletedtotal], label: 'Open' },
      { data: [this.completedtotal], label: 'Completed' }
    ]; console.log(this.barChartData)
  }

  updateBarChartLabels(month: number[]) {

    this.barChartLabels = month.map(month => this.getMonthName(month));
  }

  getMonthName(month: number): string {
    const monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
    return monthNames[month - 1];
  }



TS2322: Type 'unknown[]' is not assignable to type 'number[]'.
  Type 'unknown' is not assignable to type 'number'.
