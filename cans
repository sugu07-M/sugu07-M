completed: any[]=[];
noncompleted: any[]=[];
month: any[]=[];
Getbarchart() {
  const apiUrls = this.apiurl + '/Barchart/Getbarchart';
  

  const httpOptions = {
    headers: new HttpHeaders({
      'content-Type': 'application/json'
    })
  };

  this.http.get(apiUrls).subscribe(
    (response: any) => {
      this.chartdata = response;
     
      const completed = response.map((item: { completedIdnum: any; }) => item.completedIdnum);
      const noncompleted = response.map((item: { nonCompletedIdnum: any; }) => item.nonCompletedIdnum);
      const month = response.map((item: { crmonth: any }) => item.crmonth);
      
    }, 
    (error) => {
      console.error("Post failed", error);
    }
  );
}


  public barChartOptions: any = {
   scaleShowVerticalLines: false,
   responsive: true
 };
 public barChartLabels: string[] = this.generateChartLabels();
 public barChartType: Chart.ChartType = 'bar';
 public barChartLegend = true;
 public barChartPlugins = [];
 public barChartData: any[] = [
   { data: this.noncompleted, label: 'Open' },
   console.log(this.noncompleted),
   { data: this.completed, label: 'Completed' },
   console.log(this.completed)
 ]
 
