
public chartOptions: Partial<ChartOptions> = {};
 getChartData(): void {
    const apiUrls = this.apiurl + '/ViewChangeRequest/ViewChangerequest';

    this.http.get(apiUrls).subscribe(
      (response: any) => {
        if (!Array.isArray(response)) {
          console.error('Invalid API response: Data is not an array');
          return;
        }

        if (response.length === 0) {
          console.warn('API response is empty');
          return;
        }

        this.processChartData(response);
      },
      error => {
        console.error("API request failed", error);
      }
    );
  }

  processChartData(response: any[]): void {
    // Implement your data processing logic here
    // Example:
    // const processedData = ...

    // Once data processing is done, update chartOptions
    this.chartOptions = {
      // Assign processed data to chart options
    };
  }

      this.chartOptions = {
        series: multi,
        chart: {
          type: 'bar',
          height: 350,
          stacked: true
        },
        plotOptions: {
          bar: {
            horizontal: true
          }
        },
        xaxis: {
          categories: stagesToCount,
          labels: {
            formatter: val => val + 'K'
          }
        },
        title: {
          text: 'Fiction Books Sales'
        },
        yaxis: {
          title: {
            text: undefined
          }
        },
        tooltip: {
          y: {
            formatter: val => val + 'K'
          }
        },
        fill: {
          opacity: 1
        },
        legend: {
          position: 'top',
          horizontalAlign: 'left',
          offsetX: 40
        }
      };

      console.log('Chart options:', this.chartOptions); // Log the chart options
    },
    error => {
      console.log("API request failed", error);
    }
  );

interface ChartOptions {
  series: ApexAxisChartSeries[];
  chart: ApexChart;
  xaxis: ApexXAxis;
  plotOptions: ApexPlotOptions;
  title: ApexTitleSubtitle;
  yaxis: ApexYAxis;
  tooltip: ApexTooltip;
  fill: ApexFill;
  legend: ApexLegend;
}
