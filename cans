 filterData() {
    // Filter the data based on selected plants, start date, and end date
    let filteredByPlantDate = this.changerequest.filter((item: any) =>
      this.selectedPlantIds.includes(item.plantId) &&
      this.isWithinDateRange(item.crdate));

    // Further filter by status
    this.filter = filteredByPlantDate.filter((item: any) => this.shouldIncludeByStatus(item));
    console.log('Final filtered data:', this.filter); // Check final filtered data
    this.updateChartData(); // Update chart data
  }

  isWithinDateRange(crdate: string): boolean {
    // Convert crdate to Date object
    const crDateObj = new Date(crdate);
    // Convert startDate and endDate to Date objects
    const startDateObj = new Date(this.startDate);
    const endDateObj = new Date(this.endDate);

    // Check if crdate falls within the date range
    return crDateObj >= startDateObj && crDateObj <= endDateObj;
  }

  updateChartData() {
    // Update doughnut chart data with filtered data
    this.doughnutChartData.datasets[0].data = [
      this.countStatusByFilter('Draft'),
      this.countStatusByFilter('Pending Approval'),
      this.countStatusByFilter('Approved'),
      this.countStatusByFilter('Rejected'),
      this.countStatusByFilter('Implement'),
      this.countStatusByFilter('Pending'),
      this.countStatusByFilter('Release'),
      this.countStatusByFilter('Closure')
    ];
  }

  countStatusByFilter(status: string): number {
    return this.filter.filter(item => item.status.trim() === status).length;
  }

  shouldIncludeByStatus(item: any): boolean {
    // Define the statuses you want to include
    const includedStatuses = ['Draft', 'Pending Approval', 'Approved', 'Rejected', 'Implement', 'Pending', 'Release'];

    // Return true if the item's status is included in the defined statuses
    return includedStatuses.includes(item.status.trim());
  }

  onSelectedItemsChange(): void {
    console.log("Selected plant IDs:", this.selectedPlantIds);
    this.getchangerequest(); // Fetch data when plant selection changes
  }
