code: any[] = [];

getsummaryreport() {

  const apiUrls = this.apiurl + '/ViewChangeRequest/ViewChangerequest'
  const requestBody = {

  }
  const httpOptions = {
    headers: new HttpHeaders({
      'content-Type': 'application/json'
    })
  };
  this.http.get(apiUrls, requestBody).subscribe(
    (response: any) => {
      console.log(response);
      if (Array.isArray(response) && response.length > 0) {
        
        const uniquePlantIds = [...new Set(response.map((item: any) => item.plantId))];
        console.log("Unique plantIds:", uniquePlantIds);

        
        this.code = uniquePlantIds;
      } else {
        console.log("Response is not in the expected format or is empty.");
      }
    },
    (error) => {
      console.error("Post failed", error)
    }
  )
}




 code: string[] = [];
  changerequest: any[] = [];
  newCount: number = 0;
  completedCount: number = 0;
  pendingCount: number = 0;
  pendingApproval: number = 0;
  Approved: number = 0;
  Rejected: number = 0;
  Implemention: number = 0;
  pending: number = 0;
  release: number = 0;
  Closure: number = 0;
getchangerequest() {

  const apiUrls = this.apiurl + '/ViewChangeRequest/ViewChangerequest';
  const requestBody = {}

  const httpOptions = {
    headers: new HttpHeaders({
      'content-Type': 'application/json'
    })
  };

  this.http.get(apiUrls, requestBody).subscribe(
    (response: any) => {
      this.changerequest = response;
      this.countStatus();

    },

    (error) => {
      console.error("Post failed", error);
    }
  );
}
 countStatus() {
    this.newCount = this.getDraftCount();
    this.completedCount = this.getCompletedCount();
    this.pendingCount = this.getPendingCount();
    this.pendingApproval = this.getApprovalCount();
    this.Approved = this.getApprovedCount();
    this.Rejected = this.getRejectedCount();
    this.Implemention = this.getImplementedCount();
    this.pending = this.getPendingCount();
    this.release = this.getReleaseCount();
    this.Closure = this.getClosedCount();
  }

  getDraftCount(): number {
    return this.code.map(plantId => this.changerequest.filter(item => item.status.trim() === 'Draft' && item.plantId === plantId).length);
  }

  getCompletedCount(): number {
    return this.code.map(plantId => this.changerequest.filter(item => item.status.trim() === 'Completed' && item.plantId === plantId).length);
  }

  getPendingCount(): number {
    return this.code.map(plantId => this.changerequest.filter(item => item.status.trim() !== 'Completed' && item.status.trim() !== 'Draft' && item.plantId === plantId).length);
  }

  getApprovalCount(): number {
    return this.code.map(plantId => this.changerequest.filter(item => item.status.trim() === 'Pending Approval' && item.plantId === plantId).length);
  }

  getApprovedCount(): number {
    return this.code.map(plantId => this.changerequest.filter(item => item.status.trim() === 'Approved' && item.plantId === plantId).length);
  }

  getRejectedCount(): number {
    return this.code.map(plantId => this.changerequest.filter(item => item.status.trim() === 'Rejected' && item.plantId === plantId).length);
  }

  getImplementedCount(): number {
    return this.code.map(plantId => this.changerequest.filter(item => item.status.trim() === 'Implement' && item.plantId === plantId).length);
  }

  getPendingCount(): number {
    return this.code.map(plantId => this.changerequest.filter(item => item.status.trim() === 'Pending' && item.plantId === plantId).length);
  }

  getReleaseCount(): number {
    return this.code.map(plantId => this.changerequest.filter(item => item.status.trim() === 'Release' && item.plantId === plantId).length);
  }

  getClosedCount(): number {
    return this.code.map(plantId => this.changerequest.filter(item => item.status.trim() === 'Closure' && item.plantId === plantId).length);
  }





  <table class="fl-table">
    <thead class="table-head">
      <tr class="border-bottom">
        <th>Status</th>
        <th *ngFor="let plantId of code">{{ plantId }}</th>
        <th>Total</th>

      </tr>
    </thead>
   <tbody>
    <tr class="tr-body">
      <td>Open</td>
      <td *ngFor="let plantId of code">{{ getOpenCount(plantId) }}</td>
      <td>{{ getTotalCount('Open') }}</td>
    </tr>
    <tr class="tr-body">
      <td>Completed</td>
      <td *ngFor="let plantId of code">{{ getCompletedCount(plantId) }}</td>
      <td>{{ getTotalCount('Completed') }}</td>
    </tr>
    <tr class="tr-body">
      <td>Draft</td>
      <td *ngFor="let plantId of code">{{ getDraftCount(plantId) }}</td>
      <td>{{ getTotalCount('Draft') }}</td>
    </tr>
    <tr class="tr-body">
      <td>Approval</td>
      <td *ngFor="let plantId of code">{{ getApprovalCount(plantId) }}</td>
      <td>{{ getTotalCount('Pending Approval') }}</td>
    </tr>
    <tr class="tr-body">
      <td>Implemented</td>
      <td *ngFor="let plantId of code">{{ getImplementedCount(plantId) }}</td>
      <td>{{ getTotalCount('Implement') }}</td>
    </tr>
    <tr class="tr-body">
      <td>Released</td>
      <td *ngFor="let plantId of code">{{ getReleaseCount(plantId) }}</td>
      <td>{{ getTotalCount('Release') }}</td>
    </tr>
    <tr class="tr-body">
      <td>Closed</td>
      <td *ngFor="let plantId of code">{{ getClosedCount(plantId) }}</td>
      <td>{{ getTotalCount('Closure') }}</td>
    </tr>
    <tr class="tr-body">
      <td>Rejected</td>
      <td *ngFor="let plantId of code">{{ getRejectedCount(plantId) }}</td>
      <td>{{ getTotalCount('Rejected') }}</td>
    </tr>
  </tbody>
  </table>




X [ERROR] TS2393: Duplicate function implementation. [plugin angular-compiler]

    src/app/change-request/change-request-report/view-summary/view-summary.component.ts:142:2:
      142 │   getPendingCount(): number {
          ╵   ~~~~~~~~~~~~~~~


X [ERROR] TS2322: Type 'number[]' is not assignable to type 'number'. [plugin angular-compiler]

    src/app/change-request/change-request-report/view-summary/view-summary.component.ts:143:4:
      143 │     return this.code.map(plantId => this.changerequest.filter(ite...
          ╵     ~~~~~~


X [ERROR] TS2322: Type 'number[]' is not assignable to type 'number'. [plugin angular-compiler]

    src/app/change-request/change-request-report/view-summary/view-summary.component.ts:147:4:
      147 │     return this.code.map(plantId => this.changerequest.filter(ite...
          ╵     ~~~~~~


X [ERROR] TS2322: Type 'number[]' is not assignable to type 'number'. [plugin angular-compiler]

    src/app/change-request/change-request-report/view-summary/view-summary.component.ts:151:4:
      151 │     return this.code.map(plantId => this.changerequest.filter(ite...
          ╵     ~~~~~~
