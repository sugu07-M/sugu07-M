 onChartClicked(event: MouseEvent): void {
    const chartElement = event.target as HTMLCanvasElement;
    const activePoints = this.getChartClickedPoints(chartElement);

    if (activePoints.length > 0) {
      const clickedLabel = this.doughnutChartLabels[activePoints[0]._index];
      switch (clickedLabel) {
        case 'Draft':
          this.router.navigate(['/draft-page']);
          break;
        case 'Pending Approval':
          this.router.navigate(['/pending-approval-page']);
          break;
        case 'Approved':
          this.router.navigate(['/approved-page']);
          break;
        // Add cases for other labels
        default:
          // Handle default case
          break;
      }
    }
  }

  private getChartClickedPoints(chartElement: HTMLCanvasElement): any[] {
    const chart = Chart.getChart(chartElement);
    return chart.getElementAtEvent(event);
  }
