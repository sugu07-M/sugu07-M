<div class="chart-container">
  <apx-chart
    [series]="chartOptions.series"
    [chart]="chartOptions.chart"
    [xaxis]="chartOptions.xaxis"
    [plotOptions]="chartOptions.plotOptions"
    [title]="chartOptions.title"
    [yaxis]="chartOptions.yaxis"
    [tooltip]="chartOptions.tooltip"
    [fill]="chartOptions.fill"
    [legend]="chartOptions.legend"
  ></apx-chart>
</div>

public chartOptions: Partial<ChartOptions> = {};
   getChartData() {
    const apiUrls = this.apiurl + '/ViewChangeRequest/ViewChangerequest';
    const httpOptions = {
      headers: new HttpHeaders({
        'Content-Type': 'application/json'
      })
    };

    this.http.get(apiUrls, httpOptions).subscribe(
      (response: any) => {
        console.log('API response:', response);

        if (!Array.isArray(response)) {
          console.error('Invalid API response: Data is not an array');
          return;
        }

        if (response.length === 0) {
          console.warn('API response is empty');
          return;
        }

        this.processChartData(response);
      },
      error => {
        console.error("API request failed", error);
      }
    );
  }

  processChartData(response: any[]): void {
    // Implement your data processing logic here
    // Example:
    // const processedData = ...

    // Once data processing is done, update chartOptions
    this.chartOptions = {
      // Assign processed data to chart options
      // For example:
      // series: processedData.series,
      // chart: processedData.chart,
      // xaxis: processedData.xaxis,
      // plotOptions: processedData.plotOptions,
      // title: processedData.title,
      // yaxis: processedData.yaxis,
      // tooltip: processedData.tooltip,
      // fill: processedData.fill,
      // legend: processedData.legend
    };
  }
}

interface ChartOptions {
  series: any[]; // Update this with the correct data structure for series
  chart: any; // Update this with the correct data structure for chart options
  xaxis: any; // Update this with the correct data structure for x-axis options
  plotOptions: any; // Update this with the correct data structure for plot options
  title: any; // Update this with the correct data structure for title options
  yaxis: any; // Update this with the correct data structure for y-axis options
  tooltip: any; // Update this with the correct data structure for tooltip options
  fill: any; // Update this with the correct data structure for fill options
  legend: any; // Update this with the correct data structure for legend options
}

