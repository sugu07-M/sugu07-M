// Define the interface
public interface IEmployeeMasters
{
    void IEmployeeMasters(SPEmployeeMaster employeeMaster);
    // Other methods...
    SPEmployeeMaster GetEmployee();
    SPEmployeeMaster GetEmployeMaster();
    List<SPEmployeeMaster> CRemployemasterMasterList(string someParameter);
    SPEmployeeMaster CRemployemaster(SPEmployeeMaster employeeMaster);
}
public class EmployeeMasterRepository : IEmployeeMasters
{
    public void IEmployeeMasters(SPEmployeeMaster employeeMaster)
    {
        // Implementation of IEmployeeMasters
        // You should add the implementation logic here
    }

    public SPEmployeeMaster GetEmployee()
    {
        // Implementation of GetEmployee
        // You should add the implementation logic here
        return new SPEmployeeMaster(); // Dummy return for compilation
    }

    public SPEmployeeMaster GetEmployeMaster()
    {
        // Implementation of GetEmployeMaster
        // You should add the implementation logic here
        return new SPEmployeeMaster(); // Dummy return for compilation
    }

    public List<SPEmployeeMaster> CRemployemasterMasterList(string someParameter)
    {
        // Implementation of CRemployemasterMasterList
        // You should add the implementation logic here
        return new List<SPEmployeeMaster>(); // Dummy return for compilation
    }

    public SPEmployeeMaster CRemployemaster(SPEmployeeMaster employeeMaster)
    {
        // Implementation of CRemployemaster
        // You should add the implementation logic here
        return new SPEmployeeMaster(); // Dummy return for compilation
    }
}

// Assuming SPEmployeeMaster is a class or struct defined elsewhere in your code
public class SPEmployeeMaster
{
    // Properties and methods of SPEmployeeMaster
}
