countStatus() {
  // Reset counts for each month
  const monthlyCounts = {};

  // Aggregate counts for each month
  this.changerequest.forEach(item => {
    const month = new Date(item.date).getMonth(); // Assuming item.date is the date of the change request
    if (!monthlyCounts[month]) {
      monthlyCounts[month] = {
        Draft: 0,
        Completed: 0,
        'Approved level1': 0
      };
    }
    monthlyCounts[month][item.status]++;
  });

  // Update counts for each month
  this.barChartLabels.forEach((label, index) => {
    this.newCount[index] = monthlyCounts[index]?.Draft || 0;
    this.completedCount[index] = monthlyCounts[index]?.Completed || 0;
    this.pendingCount[index] = monthlyCounts[index]?.['Approved level1'] || 0;
  });
}


updateChartData() {
  this.barChartData = [
    { data: this.newCount, label: 'New' },
    { data: this.completedCount, label: 'Completed' },
    { data: this.pendingCount, label: 'Pending' }
  ];
}

this.http.get(apiUrls, requestBody).subscribe(
  (response: any) => {
    this.changerequest = response;
    this.countStatus();
    this.updateChartData();
    console.log(this.changerequest);
  },
  (error) => {
    console.error("Post failed", error);
  }
);


