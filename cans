 chartdata: any;
 completed: any[]=[];
 noncompleted: any[]=[];
 month: any[] = [];
 barchartdata: any[] = [];
 barChartLabels: string[] = [];
 
 Getbarchart() {
   const apiUrls = this.apiurl + '/Barchart/Getbarchart';
   

   const httpOptions = {
     headers: new HttpHeaders({
       'content-Type': 'application/json'
     })
   };

   this.http.get(apiUrls).subscribe(
     (response: any) => {
       this.chartdata = response;

       const completed:number[] = response.map((item: { completedIdnum: any; }) => item.completedIdnum);
       const noncompleted:number[] = response.map((item: { nonCompletedIdnum: any; }) => item.nonCompletedIdnum);
       const month = response.map((item: { crmonth: any }) => item.crmonth);
       this.updateBarChartLabels(month);
      
       console.log(completed),
       console.log(noncompleted)


     }, 
     (error) => {
       console.log("Post failed", error);
     }
   );
 }
 /*Chart tabs*/
 public barChartOptions: any = {
   /*scaleShowVerticalLines: false,*/
   responsive: true
 };
 /*public barChartLabels = this.updateBarChartLabels(this.month);*/
 public barChartType: Chart.ChartType = 'bar';
 public barChartLegend = true;
 public barChartPlugins = [];
 public barChartData = [
   { data: this.noncompleted, label: 'Open' },
   { data: this.completed, label: 'Completed' }
   ] 
