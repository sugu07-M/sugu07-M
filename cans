this.http.get(apiUrls).subscribe(
  (response: any) => {
    console.log(response); // Log the entire response object

    // Separate and store the values of each field
    const field1Values = response.field1;
    const field2Values = response.field2;
    const field3Values = response.field3;

    console.log('Field 1 values:', field1Values);
    console.log('Field 2 values:', field2Values);
    console.log('Field 3 values:', field3Values);

    // Now you can use field1Values, field2Values, and field3Values as needed
  },

public barChartData: any[] = [
  { data: [], label: 'Open' },
  { data: [], label: 'Completed' }
]

this.http.get(apiUrls).subscribe(
  (response: any) => {
    this.chartdata = response;
    // Assuming your API response contains 'completed' and 'noncompleted' data
    this.completed = this.chartdata.completed;
    this.noncompleted = this.chartdata.noncompleted;

    // Populate the barChartData array with the obtained data
    this.barChartData = [
      { data: this.noncompleted, label: 'Open' },
      { data: this.completed, label: 'Completed' }
    ];

    console.log(this.chartdata);
  },

if (response && response.completed && response.noncompleted) {
        this.barChartData = [
          { data: response.noncompleted, label: 'Open' },
          { data: response.completed, label: 'Completed' }
        ];

        console.log("Bar Chart Data:", this.barChartData); // Log Bar Chart Data
      } else {
        console.error("API response is missing 'completed' or 'noncompleted' data.");
      }
    },
