getplanttable() {
  if (this.selectedPlantIds.length === 0) {
    console.log('No plant IDs selected.');
    return;
  }

  const apiUrls = this.apiurl + '/ViewChangeRequest/ViewChangerequest';
  let queryParams = new HttpParams();

  if (this.selectedPlantIds.length > 0 && this.startDate && this.endDate) {
    queryParams = queryParams.set('plantId', this.selectedPlantIds.join(','));
    queryParams = queryParams.set('crdate', this.startDate + '-' + this.endDate);
  }

  const httpOptions = {
    headers: new HttpHeaders({
      'Content-Type': 'application/json'
    }),
    params: queryParams
  };

  this.http.get(apiUrls, httpOptions).subscribe(
    (response: any) => {
      const responseData: any[] = Array.isArray(response) ? response : [response]; // Cast response to array if it's not already one
      console.log('Response:', responseData);

      // Filter the response data for the selected plantIds
      const filteredResponse = responseData.filter(item => this.selectedPlantIds.includes(item.plantId));
      console.log('Filtered Response:', filteredResponse);

      this.multi = [];

      this.selectedPlantIds.forEach(selectedPlantId => {
        const plantData = filteredResponse.filter(item => item.plantId === selectedPlantId);
        console.log('Plant Data for', selectedPlantId, ':', plantData);

        const stagesCount: { [key: string]: number } = {};
        this.stagesToCount.forEach(stage => {
          stagesCount[stage] = plantData.filter(item => item.stage.trim() === stage).length;
        });

        console.log('Stages Count for', selectedPlantId, ':', stagesCount);

        const plantSeries = {
          label: selectedPlantId,
          data: this.stagesToCount.map(stage => stagesCount[stage] || 0) // Ensure data is defined for each stage
        };

        console.log('Plant Series for', selectedPlantId, ':', plantSeries);

        this.multi.push(plantSeries);
      });

      console.log('Multi:', this.multi);

      this.updateOptions();
      this.showChart = true;
    },
    (error: any) => {
      console.error('Error fetching chart data:', error);
    }
  );
}
