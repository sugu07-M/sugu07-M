getChartData() {
    const apiUrls = this.apiurl + '/ViewChangeRequest/ViewChangerequest';
    let queryParams = new HttpParams();

    if (this.selectedPlantIds.length > 0 && this.startDate && this.endDate) {
        queryParams = queryParams.set('plantId', this.selectedPlantIds.join(','));
        queryParams = queryParams.set('crdate', this.startDate + '-' + this.endDate);
    }
    const httpOptions = {
        headers: new HttpHeaders({
            'Content-Type': 'application/json'
        }),
        params: queryParams
    };

    this.http.get(apiUrls).subscribe(
        (response: any) => {
            this.chartdata = response;
            this.multi = [];

            const selectedPlantIds = this.selectedPlantIds.map(plant => plant.item_text);

            response.forEach((item: any) => {
                if (selectedPlantIds.includes(item.plantId)) {
                    const stagesCount: { [key: string]: number } = {};
                    this.stagesToCount.forEach(stage => {
                        stagesCount[stage] = response.filter((crItem: any) =>
                            crItem.plantId === item.plantId && crItem.stage.trim() === stage
                        ).length;
                    });

                    const plantSeries = {
                        label: item.plantId,
                        data: this.stagesToCount.map(stage => stagesCount[stage])
                    };

                    this.multi.push(plantSeries);
                }
            });

            this.updateChartOptions();
            this.showChart = true;
        },
        (error: any) => {
            console.error('Error fetching chart data:', error);
        }
    );
