  <div class="col">
    <label>Status</label><br />
    <select class="input-change" [(ngModel)]="statusfilter">
      <option disabled selected>Select Status</option>
      <option value="All">All</option>
      <option class="input-change" *ngIf="ischangeanalyst">Draft</option>
      <option value="Pending Approval">Pending Approval</option>
      <option value="Approved level1">Approved level1</option>
      <option value="Approved level2">Approved level2</option>
      <option value="Approved level3">Approved level3</option>
      <option value="Approved">Approved</option>
      <option value="Implementation">Implementation</option>
      <option value="Released">Released</option>
      <option value="Closure">Closure</option>
    </select>
  </div>
</div>
<div class="access-checkbox">
  
  <button *ngIf="isapprover" (click)="isassignbutton()" class="btn btn-rounded filter_button">Assigned To Me</button>&nbsp;&nbsp;&nbsp;
  <button class="btn btn-rounded filter_button" (click)="filterdropdown()">Filter</button>
</div>


statusfilter: any;
  crfilter: any = '';
  plantscode: any = '';
  categoryids: any = '';
  classificationid: any = '';
  prioritytypeid: any = '';
  fromDt: any = '';
  endDt: any = '';
  filterflag: boolean = false;
  filtersdata: any[] = [];

  filterdropdown() {
    this.filtersdata = [];

    if (this.plantscode !== '') {
      this.filterflag = true;
      this.filtersdata = this.crfilter.filter((item: any) => item.plantcode === parseInt(this.plantscode));
    }

    if (this.categoryids !== '') {
      this.filterflag = true;
      if (this.filtersdata.length === 0) {
        this.filtersdata = this.crfilter;
      }
      this.filtersdata = this.filtersdata.filter((item: any) => item.itcategoryId === parseInt(this.categoryids));
    }

    if (this.classificationid !== '') {
      this.filterflag = true;
      if (this.filtersdata.length === 0) {
        this.filtersdata = this.crfilter;
      }
      this.filtersdata = this.filtersdata.filter((item: any) => item.itclassificationId === parseInt(this.classificationid));
    }

    if (this.prioritytypeid !== '') {
      this.filterflag = true;
      if (this.filtersdata.length === 0) {
        this.filtersdata = this.crfilter;
      }
      this.filtersdata = this.filtersdata.filter((item: any) => item.priorityType === parseInt(this.prioritytypeid));
    }

    if (this.fromDt !== '') {
      if (this.endDt === '') {
        this.endDt = this.today; // Assuming today is defined somewhere in your component
      }
      this.filterflag = true;
      if (this.filtersdata.length === 0) {
        this.filtersdata = this.crfilter;
      }
      this.filtersdata = this.filtersdata.filter((item: any) => item.crdate <= this.fromDt && item.crdate >= this.endDt);
    }

    if (this.statusfilter.trim() !== '') {
      this.filterflag = true;
      if (this.filtersdata.length === 0) {
        this.filtersdata = this.crfilter;
      } else if (this.statusfilter.trim() !== 'All') {
        this.filtersdata = this.filtersdata.filter((item: any) => item.status.trim() === this.statusfilter.trim());
      }
    }

    if (!this.filterflag) {
      this.filtersdata = this.crfilter;
    }

    console.log("Filtered Data:", this.filtersdata);
  }
